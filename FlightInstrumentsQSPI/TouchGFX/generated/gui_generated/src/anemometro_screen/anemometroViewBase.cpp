/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/anemometro_screen/anemometroViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"

anemometroViewBase::anemometroViewBase() :
    buttonCallback(this, &anemometroViewBase::buttonCallbackHandler)
{
	touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    box1.setPosition(0, 0, 480, 272);
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(54, 54, 54));

    button1.setXY(420, 106);
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
    button1.setAction(buttonCallback);

    gauge1.setXY(140, 36);
    gauge1.setBitmaps(Bitmap(BITMAP_ASI_ADAP_GA_ID));
    gauge1.setLimits(30, 220, 44, 330);

    add(box1);
    add(button1);
    add(gauge1);
}

void anemometroViewBase::setupScreen()
{

}

void anemometroViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
    {
        //Interaction1
        //When button1 clicked change screen to direccion
        //Go to direccion with screen transition towards East
        application().gotodireccionScreenSlideTransitionEast();
    }
}
